<style lang="less" scoped>
  view.container {
    background-color: f6f6f6;
  }
  .load-btn,
  .load-btn-nomore {
    width: 670rpx;
    height: 80rpx;
    margin: 10rpx auto;
    text-align: center;
    line-height: 80rpx;
    border-radius: 26rpx;
    border-radius: 26rpx;
    font-size: 28rpx;
  }
  .load-btn {
    background-color: #FFCA00;
    color: #FFFFFF;
  }
  .load-btn-nomore {
    background-color: #9B9B9B;
    color: #FFFFFF;
  }
  .list-group {
    background-color: #f6f6f6;
    padding: 12rpx 40rpx;
    .list-group-item {
      position: relative;
      box-sizing: border-box;
      width: 670rpx;
      min-height: 162rpx;
      margin: 20rpx auto;
      padding: 30rpx 46rpx;
      border-radius: 12rpx;
      background: #FFFFFF;
      .content {
        .title {
          font-size: 32rpx;
          color: #4A4A4A;
          letter-spacing: 0;
        }
        .time {
          margin-top: 20rpx;
          font-size: 24rpx;
          color: #9B9B9B;
          letter-spacing: 0;
        }
      }
      .status {
        position: absolute;
        top: 30rpx;
        right: 46rpx;
        color: #fdaf20;
      }
      .footer {
        position: relative;
        height: 60rpx;
        margin-top: 26rpx;
        border-top: 2rpx solid #eee; 
        .confirm {
          position: absolute;
          top: 17rpx;
          right: 0rpx;
          width: 150rpx;
          height: 56rpx;
          border-radius: 12rpx;
          background-image: linear-gradient(-89deg, #FDAF20 5%, #FFC901 100%, #FFCA00 100%);
          color: #FFFFFF;
          text-align: center;
          line-height: 56rpx;
          font-size: 28rpx;
        }
      }
    }
  }
</style>
<template>
  <view class="container">
    <van-dialog id="van-dialog" />
    <van-toast id="van-toast" />
    <van-tabs active="{{tabBarActive}}" color="#FFC901" bind:change="onTabActiveChange">
      <van-tab title="待处理"></van-tab>
      <van-tab title="待确认"></van-tab>
      <van-tab title="已完成"></van-tab>
    </van-tabs>
    <block wx:if="{{ordersList.length}}">
      <view class="list-group">
        <repeat for="{{ordersList}}" key="id" item="item" >
          <view class="list-group-item">
            <view class="status">{{item.status_text}}</view>
            <view class="content">
              <view class="title">{{item.goods.title}}</view>
              <view class="time">{{item.create_time}}</view>
            </view>
            <view class="footer" wx:if="{{item.status === 1}}">
              <view class="confirm" wx:if="{{item.status === 1}}" id="{{index}}" @tap="tapConfirm">确认收到</view>
            </view>
          </view>
        </repeat>
      </view>
    </block>
    <block wx:else>
      <view class="empty-data">暂无相关订单</view>
    </block>
    <block wx:if="{{hasNextShow}}">
      <block wx:if="{{hasNext}}">
        <view class="load-btn" @tap="tapLoadMore">
          <text class="">加载更多</text>
        </view>
      </block>
      <block wx:else>
        <view class="load-btn-nomore">
          <text class="">没有更多了</text>
        </view>
      </block>
    </block>
  </view>
</template>
<script>
import wepy from 'wepy'
import api from '../api/api'
import env from '../utils/env'
import Dialog from '../components/van/dialog/dialog'
import Toast from '../components/van/toast/toast'
export default class Order extends wepy.page {
  config = {
    navigationBarTitleText: '商品订单',
    usingComponents: {
      'van-button': '../components/van/button/index',
      'van-icon': '../components/van/icon/index',
      'van-toast': '../components/van/toast/index',
      'van-tab': '../components/van/tab/index',
      'van-tabs': '../components/van/tabs/index',
      'van-dialog': '../components/van/dialog/index',
    }
  }
  data = {
    tabBarActive: 0,
    token: null,
    ordersList: [],
    target: 'wait',
    page: 1,
    hasNext: true,
    hasNextShow: false
  }
  async onLoad() {
    this.token = wepy.getStorageSync(env.TOKEN)
    // this.loadOrdersList(this.token)
    this.$apply()
  }
  onShow() {
    this.ordersList = []
    this.$apply()
    this.loadOrdersList()
  }
  // 获取订单列表
  async loadOrdersList() {
    let token = wepy.getStorageSync(env.TOKEN) 
    let ordersList = await api.orderslist({
      token: token,
      query: {
        target: this.target,
        page: this.page
      }
    })
    if (ordersList.statusCode === 200) {
      if (ordersList.data.list.length < 1) {
        Toast('没有更多了')
        this.hasNext = false
      } else {
        this.ordersList = this.ordersList.concat(ordersList.data.list)
      }
      // 页数小于一不显示下一页按钮
      if (ordersList.data.ext.pageMax > 1) {
        this.hasNextShow = true
      }
      // 剩余页数小于一禁用下一页按钮
      console.log(ordersList.data.ext)
      if (ordersList.data.ext.hasNext < 1) {
        this.hasNext = false
      }
    } else {
      Toast(ordersList.data.err)
    }
    console.log(ordersList.data)
    this.$apply()
  }
  methods = {
    // nav-tab点击切换
    onTabActiveChange(e) {
      console.log(e)
      let index = e.detail.index
        let target = null
        switch (index) {
          case 0:
            target = 'wait'
            break
          case 1:
            target = 'sent'
            break
          case 2:
            target = 'success'
            break
        }
        this.target = target
        this.hasNext = true
        this.hasNextShow = false
        this.ordersList = []
        this.page = 1
        this.$apply()
        // 重新获取列表
        this.loadOrdersList()
        this.$apply()
    },
    async tapConfirm(e) {
      console.log(e)
      let index = e.target.id
      // 确认前询问
      let confirm = false
      await Dialog.confirm({
        title: '提示',
        message: '是否确定兑换，确认后不可取消'
      }).then(() => {
        confirm = true
        console.log(1)
        Dialog.close();
      }).catch(() => {
        confirm = false
        console.log(2)
        Dialog.close();
      })
      if (!confirm) {
        return false
      }
      let id = this.ordersList[index].id
      let token = this.token
      let res = await api.confirm({
        token: token,
        query: {
          id: id
        }
      })
      if (res.statusCode === 200) {
        Toast(res.data.msg)
        this.ordersList = []
        this.$apply()
        this.loadOrdersList()
      } else {
        Toast(res.data.err)
      }
    },
    async tapLoadMore() {
      this.page += 1
      this.$apply()
      this.loadOrdersList()
    }
  }
}
</script>
